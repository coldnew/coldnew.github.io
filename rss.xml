<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>coldnew&amp;#39;s blog</title>
    <link>https://coldnew.github.io/</link>
    <atom:link href="/rss.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Fri, 31 May 2019 14:52:13 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>TinyFPGA BX 開發紀錄: 開箱文</title>
      <link>https://coldnew.github.io/68814ae4/</link>
      <guid>https://coldnew.github.io/68814ae4/</guid>
      <pubDate>Fri, 31 May 2019 14:49:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
最近和網路上的朋友討論要弄個讀書會之類的來好好學習 FPGA，討論後的結果我們決定從 &lt;a href=&quot;https://tinyfpga.com/&quot;&gt;TinyFPGA BX&lt;/a&gt; 來開始進行。
&lt;/p&gt;

&lt;p&gt;
也因此筆者就透過網路購買了 &lt;a href=&quot;https://tinyfpga.com/&quot;&gt;TinyFPGA BX&lt;/a&gt; 這款目前蠻紅的開源專案，來打算透過它從寫個簡易的 MCU 到製作自己的 SoC (前提是邏輯閘夠，這塊板子 &lt;code&gt;只有 7680 個邏輯閘&lt;/code&gt; 可以使用)。
&lt;/p&gt;
      
      </description>
      
      <comments>https://coldnew.github.io/68814ae4/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Ultra96 開發紀錄: 讓 Vivado 有 Ultra96 的設定檔</title>
      <link>https://coldnew.github.io/b1903c9f/</link>
      <guid>https://coldnew.github.io/b1903c9f/</guid>
      <pubDate>Mon, 29 Apr 2019 01:40:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
在透過 &lt;a href=&quot;http://www.xilinx.com/products/design-tools/vivado.html&quot;&gt;Vivado&lt;/a&gt; 去建立新的專案的時候，開發板沒有 &lt;a href=&quot;https://www.96boards.org/product/ultra96/&quot;&gt;Ultra96&lt;/a&gt; 的選項可以選，因此我們就必須自己去設定關於其開發板的資訊。
&lt;/p&gt;

&lt;p&gt;
幸好，&lt;a href=&quot;https://www.96boards.org/product/ultra96/&quot;&gt;Ultra96&lt;/a&gt; 的開發商 &lt;a href=&quot;https://www.avnet.com&quot;&gt;AVNET&lt;/a&gt; 已經做好這塊開發板的設定檔，並放置到
&lt;a href=&quot;https://github.com/Avnet/bdf&quot;&gt;Avnet/bdf&lt;/a&gt; 這個 repo 中，就讓我們來將它安裝到我們的 Vivado 吧！
&lt;/p&gt;

&lt;p&gt;
(本文以 &lt;code&gt;Vivado 2018.2&lt;/code&gt; 進行開發)
&lt;/p&gt;
      
      </description>
      
      <comments>https://coldnew.github.io/b1903c9f/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Ultra96 開發紀錄: 快速開始</title>
      <link>https://coldnew.github.io/a75bc6c4/</link>
      <guid>https://coldnew.github.io/a75bc6c4/</guid>
      <pubDate>Sat, 27 Apr 2019 12:47:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
在 &lt;a href=&quot;https://coldnew.github.io/b728d8e8/&quot;&gt;Ultra96 開發紀錄: 開箱文&lt;/a&gt; 一文中筆者紀錄了如何購買 &lt;a href=&quot;https://www.96boards.org/product/ultra96/&quot;&gt;Ultra96&lt;/a&gt; 開發板，而裡面付的 SD Card 其實已經有預先燒錄好一個可以開機的映像檔 (Image)。
&lt;/p&gt;

&lt;p&gt;
就讓我們先插入 SD Card 並搭配 &lt;a href=&quot;http://ultra96.org/sites/default/files/documentations/Ultra96-GSG-v1_0.pdf&quot;&gt;Ultra96 Getting Started Guide&lt;/a&gt; 來看看這塊板子吧。
&lt;/p&gt;
      
      </description>
      
      <comments>https://coldnew.github.io/a75bc6c4/#disqus_thread</comments>
    </item>
    
    <item>
      <title>webOS OSE 研究筆記: webOS OSE 與 Qt5</title>
      <link>https://coldnew.github.io/d9eb5a84/</link>
      <guid>https://coldnew.github.io/d9eb5a84/</guid>
      <pubDate>Wed, 17 Apr 2019 05:04:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
在測試 &lt;a href=&quot;http://webosose.org&quot;&gt;webOS OSE&lt;/a&gt; (webOS Open Source Edition) 的時候，我注意到了 webOS OSE 的核心組件是採用 &lt;code&gt;Qt5&lt;/code&gt; 製作的，搭配的版本是 &lt;code&gt;Qt 5.6.3&lt;/code&gt; 。
&lt;/p&gt;

&lt;p&gt;
那又怎樣? 實際上 &lt;code&gt;Qt 5.6.3&lt;/code&gt; 這個 LTS (Long Term Support) 的版本在今年 (2019) 的 3 月已經&lt;a href=&quot;https://blog.qt.io/blog/2018/11/29/support-qt-5-6-lts-ends-march-2019/&quot;&gt;停止支援&lt;/a&gt;了，因此必須要來說說這件事對我們這群玩家以及想將 webOS OSE 用在自己商品上的人的影響。
&lt;/p&gt;
      
      </description>
      
      <comments>https://coldnew.github.io/d9eb5a84/#disqus_thread</comments>
    </item>
    
    <item>
      <title>webOS OSE 研究筆記: 安裝 SDK</title>
      <link>https://coldnew.github.io/ecf86c20/</link>
      <guid>https://coldnew.github.io/ecf86c20/</guid>
      <pubDate>Mon, 15 Apr 2019 15:48:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
在建立完 &lt;a href=&quot;https://coldnew.github.io/9df34338/&quot;&gt;Raspberry Pi 3&lt;/a&gt; 或是 &lt;a href=&quot;https://coldnew.github.io/eb8ad016/&quot;&gt;QEMU x86&lt;/a&gt; 的 &lt;a href=&quot;http://webosose.org&quot;&gt;webOS OSE&lt;/a&gt; 系統後，我們就可以準備來開始寫我們的程式了。
&lt;/p&gt;

&lt;p&gt;
不過在這之前，先來裝個 SDK 來方便專案的管理與發佈 (deploy)。
&lt;/p&gt;
      
      </description>
      
      <comments>https://coldnew.github.io/ecf86c20/#disqus_thread</comments>
    </item>
    
    <item>
      <title>webOS OSE 研究筆記: 建立 QEMUx86 模擬器</title>
      <link>https://coldnew.github.io/eb8ad016/</link>
      <guid>https://coldnew.github.io/eb8ad016/</guid>
      <pubDate>Fri, 12 Apr 2019 10:01:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
在 &lt;a href=&quot;https://coldnew.github.io/9df34338/&quot;&gt;webOS OSE 研究筆記: 編譯 webOS OSE 到 Raspberry Pi 3&lt;/a&gt; 一文中我們題到了如何透過 &lt;a href=&quot;http://webosose.org&quot;&gt;webOS OSE&lt;/a&gt; 提供的基於 &lt;a href=&quot;http://www.yoctoproject.org/&quot;&gt;Yocto Project&lt;/a&gt; 的編譯系統，建立開機卡片讓你的 Raspberry Pi 3 執行  &lt;a href=&quot;http://webosose.org&quot;&gt;webOS OSE&lt;/a&gt; 系統。
&lt;/p&gt;

&lt;p&gt;
而在這邊文章中，我們將改建立用於 webOS OSE 的模擬器環境，以便於手邊沒有 Raspberry Pi 3 可以用時候的開發。
&lt;/p&gt;
      
      </description>
      
      <comments>https://coldnew.github.io/eb8ad016/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Ultra96 開發紀錄: 開箱文</title>
      <link>https://coldnew.github.io/b728d8e8/</link>
      <guid>https://coldnew.github.io/b728d8e8/</guid>
      <pubDate>Tue, 26 Feb 2019 10:15:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
在 &lt;a href=&quot;https://coldnew.github.io/categories/ultrazed-3eg-pciecc/&quot;&gt;UltraZed-EG PCIe Carrier Card 開發紀錄&lt;/a&gt; 系列文中，筆者曾經撰寫一些關於 &lt;a href=&quot;https://www.xilinx.com/products/silicon-devices/soc/zynq-ultrascale-mpsoc.html&quot;&gt;Xilinx UltraScale+ MPSoC&lt;/a&gt; 系列的 &lt;code&gt;Zynq UltraScale+ EG&lt;/code&gt; 這顆同時具有 ARM Cortex-A53、ARM Cortex-R5 以及 Xilinx FPGA 的 SOC。
&lt;/p&gt;

&lt;p&gt;
不過由於當時系列文使用的開發板是向人借的，最近也還回去了。因此筆者自行入手了同樣為 &lt;a href=&quot;https://www.avnet.com&quot;&gt;AVNET&lt;/a&gt; 公司所出品的 &lt;a href=&quot;https://www.96boards.org/product/ultra96/&quot;&gt;Ultra96&lt;/a&gt;。
&lt;/p&gt;

&lt;p&gt;
本文先做簡單的開箱動作以及提供一些相關的 FAQ，正式開發紀錄則會下篇後才開始。
&lt;/p&gt;
      
      </description>
      
      <comments>https://coldnew.github.io/b728d8e8/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Librem 5 Dev-Kit 開發紀錄: 硬體認識 - 核心板篇</title>
      <link>https://coldnew.github.io/1124805e/</link>
      <guid>https://coldnew.github.io/1124805e/</guid>
      <pubDate>Sun, 30 Dec 2018 06:07:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
在 &lt;a href=&quot;https://coldnew.github.io/4c50d1c9/&quot;&gt;Librem 5 Dev-Kit 開發紀錄: 開箱文&lt;/a&gt; 一文中，我們開箱了 &lt;a href=&quot;https://puri.sm/products/librem-5/&quot;&gt;Librem 5&lt;/a&gt;  手機的開發板。
&lt;/p&gt;

&lt;p&gt;
由於這一塊開發板其實也可以區分為核心板以及擴充板，因此筆者在這次的硬體介紹部份將會切成兩篇文章，好方便後續開發時的查看。
&lt;/p&gt;

&lt;p&gt;
在這篇文章中，我們將看看 &lt;a href=&quot;https://puri.sm/products/librem-5/&quot;&gt;Librem 5&lt;/a&gt; 所使用的核心板，也就是 &lt;a href=&quot;https://emcraft.com/&quot;&gt;EmCraft&lt;/a&gt; 所販售的 &lt;a href=&quot;https://emcraft.com/products/868&quot;&gt;NXP i.MX 8M System-On-Module&lt;/a&gt;。
&lt;/p&gt;
      
      </description>
      
      <comments>https://coldnew.github.io/1124805e/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Librem 5 Dev-Kit 開發紀錄: 開箱文</title>
      <link>https://coldnew.github.io/4c50d1c9/</link>
      <guid>https://coldnew.github.io/4c50d1c9/</guid>
      <pubDate>Thu, 27 Dec 2018 15:36:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
筆者今天拿到了去年參與幕資的 &lt;a href=&quot;https://puri.sm/products/librem-5/&quot;&gt;Librem 5&lt;/a&gt; 手機的開發板，因此接下來也會有一系列針對這一塊開發板的文章。
&lt;/p&gt;

&lt;p&gt;
先來個開箱文吧 :)
&lt;/p&gt;
      
      </description>
      
      <comments>https://coldnew.github.io/4c50d1c9/#disqus_thread</comments>
    </item>
    
    <item>
      <title>webOS OSE 研究筆記: 編譯 webOS OSE 到 Raspberry Pi 3</title>
      <link>https://coldnew.github.io/9df34338/</link>
      <guid>https://coldnew.github.io/9df34338/</guid>
      <pubDate>Sat, 22 Dec 2018 04:45:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
在 &lt;a href=&quot;https://coldnew.github.io/6ea67721/&quot;&gt;webOS OSE 研究筆記: 認識 webOS&lt;/a&gt; 一文中我們稍微介紹了關於 LG 在今年 (2018) 的 3 月開源的  &lt;a href=&quot;http://webosose.org&quot;&gt;webOS OSE&lt;/a&gt; (webOS Open Source Edition), 這款類似 LG 用於 TV 上面的 &lt;a href=&quot;http://webostv.developer.lge.com/&quot;&gt;webOS TV&lt;/a&gt; 的系統。
&lt;/p&gt;

&lt;p&gt;
本文將介紹如何使用 &lt;a href=&quot;http://webosose.org&quot;&gt;webOS OSE&lt;/a&gt; 提供的基於 &lt;a href=&quot;http://www.yoctoproject.org/&quot;&gt;Yocto Project&lt;/a&gt; 的編譯系統，編譯並建立 Raspberry Pi 3 上的 webOS OSE 系統。
&lt;/p&gt;
      
      </description>
      
      <comments>https://coldnew.github.io/9df34338/#disqus_thread</comments>
    </item>
    
    <item>
      <title>webOS OSE 研究筆記: 認識 webOS</title>
      <link>https://coldnew.github.io/6ea67721/</link>
      <guid>https://coldnew.github.io/6ea67721/</guid>
      <pubDate>Sat, 22 Dec 2018 03:24:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
LG 在今年開源了 &lt;a href=&quot;http://webosose.org&quot;&gt;webOS OSE&lt;/a&gt; (webOS Open Source Edition), 這是一款類似 LG 用於 TV 上面的 &lt;a href=&quot;http://webostv.developer.lge.com/&quot;&gt;webOS TV&lt;/a&gt; 系統，但是相對的缺少許多預建設的 app。
&lt;/p&gt;

&lt;p&gt;
由於 &lt;a href=&quot;http://webosose.org&quot;&gt;webOS OSE&lt;/a&gt; 也是 Linux based 的系統，個人覺的有趣有打算拿來寫一系列的文章。
&lt;/p&gt;

&lt;p&gt;
本文將粗略介紹 webOS 的歷史， &lt;code&gt;由於資料皆是網路上找來，並未受過嚴密的審查，請僅供參考就好&lt;/code&gt; 。
&lt;/p&gt;
      
      </description>
      
      <comments>https://coldnew.github.io/6ea67721/#disqus_thread</comments>
    </item>
    
    <item>
      <title>UltraZed-EG PCIe Carrier Card 開發紀錄: 使用 PetaLinux 建立系統</title>
      <link>https://coldnew.github.io/b394a9ce/</link>
      <guid>https://coldnew.github.io/b394a9ce/</guid>
      <pubDate>Thu, 06 Dec 2018 05:20:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
在了解了如何透過 Vivado 搭配 Xilinx SDK 來控制 Cortex-A53 和 Cortex-R5 後，是時候把 Linux 裝上來啦。
&lt;/p&gt;

&lt;p&gt;
針對不同嵌入式環境的需求，Xlinux 針對他們自己的平台，提供了基於 &lt;a href=&quot;http://www.yoctoproject.org/&quot;&gt;Yocto Project&lt;/a&gt; 製作的發行板製作工具，並命名為 &lt;a href=&quot;https://www.xilinx.com/products/design-tools/embedded-software/petalinux-sdk.html&quot;&gt;PetaLinux&lt;/a&gt; 。這篇文章將介紹如何使用基本的 &lt;a href=&quot;https://www.xilinx.com/products/design-tools/embedded-software/petalinux-sdk.html&quot;&gt;PetaLinux&lt;/a&gt; 功能，並建立一個可開機的映像檔 (Image) 讓 &lt;a href=&quot;http://ultrazed.org/product/ultrazed-eg-pcie-carrier-card&quot;&gt;UltraZed-EG PCIe Carrier Card&lt;/a&gt; 開機並進入到 Linux 系統。
&lt;/p&gt;

&lt;p&gt;
(本文以 &lt;code&gt;Vivado 2018.2&lt;/code&gt; 以及 &lt;code&gt;PetaLinux 2018.2&lt;/code&gt; 進行開發)
&lt;/p&gt;
      
      </description>
      
      <comments>https://coldnew.github.io/b394a9ce/#disqus_thread</comments>
    </item>
    
    <item>
      <title>UltraZed-EG PCIe Carrier Card 開發紀錄: Hello Cortex-R5</title>
      <link>https://coldnew.github.io/7006a3f7/</link>
      <guid>https://coldnew.github.io/7006a3f7/</guid>
      <pubDate>Wed, 05 Dec 2018 02:37:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
在 &lt;a href=&quot;https://coldnew.github.io/501bf2ae/&quot;&gt;UltraZed-EG PCIe Carrier Card 開發紀錄: Hello Cortex-A53&lt;/a&gt; 中我們題到了如何透過 Vivado 去建立我們的專案，讓 &lt;a href=&quot;http://ultrazed.org/product/ultrazed-eg-pcie-carrier-card&quot;&gt;UltraZed-EG PCIe Carrier Card&lt;/a&gt; 上的處理器系統 (Processing Syste, PS) 裡面的 Cortex-A53 可以透過 &lt;code&gt;AXI_GPIO&lt;/code&gt; 去對可程式邏輯區 (Programmable Logic, PL) 端的 LEDs D12 ~ D19 進行輸出的控制。
&lt;/p&gt;

&lt;p&gt;
在這篇文章，我們要講的則是如何透過 &lt;code&gt;AXI_GPIO&lt;/code&gt; 來處理 &lt;code&gt;輸入&lt;/code&gt; 的控制，並讓 Cortex-R5 根據不同的輸入，在 &lt;code&gt;ps_uart1&lt;/code&gt; 輸出不同的訊息，以及控制不同的 LED 亮暗。
&lt;/p&gt;

&lt;p&gt;
(本文以 &lt;code&gt;Vivado 2018.2&lt;/code&gt; 進行開發)
&lt;/p&gt;
      
      </description>
      
      <comments>https://coldnew.github.io/7006a3f7/#disqus_thread</comments>
    </item>
    
    <item>
      <title>UltraZed-EG PCIe Carrier Card 開發紀錄: Hello Cortex-A53</title>
      <link>https://coldnew.github.io/501bf2ae/</link>
      <guid>https://coldnew.github.io/501bf2ae/</guid>
      <pubDate>Wed, 21 Nov 2018 08:27:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
在 &lt;a href=&quot;https://coldnew.github.io/d1be86fb/&quot;&gt;UltraZed-EG PCIe Carrier Card 開發紀錄: 硬體認識&lt;/a&gt; 一文中我們了解了 &lt;a href=&quot;http://ultrazed.org/product/ultrazed-eg-pcie-carrier-card&quot;&gt;UltraZed-EG PCIe Carrier Card&lt;/a&gt; 這一塊開發板的一些資訊後，是時候來開發點專案啦~
&lt;/p&gt;

&lt;p&gt;
在這篇文章中，我們將讓這塊開發板的 Cortex-A53 透過 &lt;code&gt;AXIO_GPIO&lt;/code&gt; 模組，點亮板子上的 LED 燈，並且透過 &lt;code&gt;ps_uart0&lt;/code&gt; 輸出一些訊息。
&lt;/p&gt;

&lt;p&gt;
(本文以 &lt;code&gt;Vivado 2018.2&lt;/code&gt; 進行開發)
&lt;/p&gt;
      
      </description>
      
      <comments>https://coldnew.github.io/501bf2ae/#disqus_thread</comments>
    </item>
    
    <item>
      <title>STM32F746 Discovery 開發紀錄: ST-LINK/V2 韌體更新</title>
      <link>https://coldnew.github.io/1864ad14/</link>
      <guid>https://coldnew.github.io/1864ad14/</guid>
      <pubDate>Fri, 16 Nov 2018 01:49:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
由於我們很久沒有使用這一片  &lt;a href=&quot;https://www.st.com/content/st_com/en/products/evaluation-tools/product-evaluation-tools/mcu-eval-tools/stm32-mcu-eval-tools/stm32-mcu-discovery-kits/32f746gdiscovery.html#design-scroll&quot;&gt;STM32F746 Discovery&lt;/a&gt; 開發板，因此最好先更新一下他的 ST-LINK/V2 的驅動。
&lt;/p&gt;

&lt;p&gt;
本文紀錄如何在 Linux 下更新 ST-LINK/V2 驅動的方式。
&lt;/p&gt;
      
      </description>
      
      <comments>https://coldnew.github.io/1864ad14/#disqus_thread</comments>
    </item>
    
    <item>
      <title>UltraZed-EG PCIe Carrier Card 開發紀錄: 讓 Vivado 有 UltraZed-EG PCIe Carrier Card 的設定檔</title>
      <link>https://coldnew.github.io/2c97574c/</link>
      <guid>https://coldnew.github.io/2c97574c/</guid>
      <pubDate>Mon, 05 Nov 2018 06:06:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
在透過 &lt;a href=&quot;http://www.xilinx.com/products/design-tools/vivado.html&quot;&gt;Vivado&lt;/a&gt; 去建立新的專案的時候，開發板沒有 &lt;a href=&quot;http://ultrazed.org/product/ultrazed-eg-pcie-carrier-card&quot;&gt;UltraZed-EG PCIe Carrier Card&lt;/a&gt; 的選項可以選，因此我們就必須自己去設定關於其開發板的資訊。
&lt;/p&gt;

&lt;p&gt;
幸好，&lt;a href=&quot;http://ultrazed.org/product/ultrazed-eg-pcie-carrier-card&quot;&gt;UltraZed-EG PCIe Carrier Card&lt;/a&gt; 的開發商 &lt;a href=&quot;https://www.avnet.com&quot;&gt;AVNET&lt;/a&gt; 已經做好這塊開發板的設定檔，並放置到 &lt;a href=&quot;https://github.com/Avnet/bdf&quot;&gt;Avnet/bdf&lt;/a&gt; 這個 repo 中，就讓我們來將它安裝到我們的 Vivado 吧！
&lt;/p&gt;
      
      </description>
      
      <comments>https://coldnew.github.io/2c97574c/#disqus_thread</comments>
    </item>
    
    <item>
      <title>UltraZed-EG PCIe Carrier Card 開發紀錄: 硬體認識</title>
      <link>https://coldnew.github.io/d1be86fb/</link>
      <guid>https://coldnew.github.io/d1be86fb/</guid>
      <pubDate>Sun, 26 Aug 2018 05:51:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
最近入手了 &lt;a href=&quot;http://ultrazed.org/product/ultrazed-eg-pcie-carrier-card&quot;&gt;UltraZed-EG PCIe Carrier Card&lt;/a&gt; ，這是一款基於 &lt;a href=&quot;http://zedboard.org/product/ultrazed-EG&quot;&gt;UltraZed-EG&lt;/a&gt; 核心板進行延伸的開發板，和 &lt;a href=&quot;https://store.digilentinc.com/zybo-zynq-7000-arm-fpga-soc-trainer-board/&quot;&gt;Zybo Board&lt;/a&gt; 類似，是一款同時具有 Xilinx FPGA 並且包含了 ARM CPU 的開發平台。
&lt;/p&gt;

&lt;p&gt;
但是不同的是，此開發板主板採用的核心為 &lt;a href=&quot;https://www.xilinx.com/products/silicon-devices/soc/zynq-ultrascale-mpsoc.html&quot;&gt;Xilinx UltraScale+ MPSoC&lt;/a&gt; ，這一款具有 Cortex-A53 以及 Mali-400 的 FPGA 晶片，補足了 Zynq-7000 缺少 GPU 的不足。
&lt;/p&gt;

&lt;p&gt;
為了了解這塊開發板，我做了一些整理，讓我們一樣從硬體以及週邊開始吧～
&lt;/p&gt;
      
      </description>
      
      <comments>https://coldnew.github.io/d1be86fb/#disqus_thread</comments>
    </item>
    
    <item>
      <title>在 Linux 下掛載 SD 卡映像檔</title>
      <link>https://coldnew.github.io/ff159f7c/</link>
      <guid>https://coldnew.github.io/ff159f7c/</guid>
      <pubDate>Sat, 25 Aug 2018 01:56:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
最近有需求是要將 Raspbian 之類提供的 SD 卡映像檔 (.img) 裡面的 rootfs 給提出來，因此找了一下不需要將該映像檔燒到實體 SD 卡，而是將其掛載到目錄後再將需要的檔案複製出來的方法。
&lt;/p&gt;
      
      </description>
      
      <comments>https://coldnew.github.io/ff159f7c/#disqus_thread</comments>
    </item>
    
    <item>
      <title>DE2-115 開發紀錄: 在 Linux 下使用 ModelSim</title>
      <link>https://coldnew.github.io/ce6f7a0a/</link>
      <guid>https://coldnew.github.io/ce6f7a0a/</guid>
      <pubDate>Wed, 06 Jun 2018 15:56:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
撰寫完 Verilog 程式後，除了下載到 FPGA 開發板上，我們也可以透過 &lt;a href=&quot;https://www.altera.com/products/design-software/model---simulation/modelsim-altera-software.html&quot;&gt;ModelSim&lt;/a&gt; 來對我們的程式進行波型的模擬。
&lt;/p&gt;

&lt;p&gt;
由於 Altera 的 ModelSim 在 Linux 下運作可能會遇到一些問題導致不能執行，本篇將整理我自己遇到的情況。
&lt;/p&gt;
      
      </description>
      
      <comments>https://coldnew.github.io/ce6f7a0a/#disqus_thread</comments>
    </item>
    
    <item>
      <title>DE2-115 開發紀錄: 使用樣板建立專案</title>
      <link>https://coldnew.github.io/d70f742b/</link>
      <guid>https://coldnew.github.io/d70f742b/</guid>
      <pubDate>Mon, 04 Jun 2018 15:54:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
在 &lt;a href=&quot;https://coldnew.github.io/4d1ad2ce&quot;&gt;DE2-115 開發紀錄: 透過可程式邏輯控制 LED 閃爍&lt;/a&gt; 一文中我們透過指定 FPGA 型號等資訊來建立我們的專案，那是否可以像是選開發板這樣的方式來建立專案呢?
&lt;/p&gt;
      
      </description>
      
      <comments>https://coldnew.github.io/d70f742b/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
